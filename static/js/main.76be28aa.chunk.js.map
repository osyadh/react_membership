{"version":3,"sources":["assets/noPosterSmall.png","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","require","length","substring","HomePresenter","nowPlaying","upcoming","popular","loading","error","Loader","map","movie","key","poster_path","vote_average","release_date","prototype","PropTypes","array","bool","isRequired","string","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","show","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","func","SearchContainer","event","preventDefault","searchByTerm","target","a","BackDrop","bgImage","Content","Cover","Data","h1","ItemContainer","Divider","Overview","p","DetailPresenter","result","backdrop_path","runtime","episode_run_time","genres","genre","index","overview","object","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","console","log","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76be28aa.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.a2dca38d.png\";","import React from \"react\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Header = styled.header`\n  color: white;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 50px;\n  display: flex;\n  align-items: center;\n  background-color: rgba(20, 20, 20, 0.8);\n  z-index: 10;\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n  display: flex;\n`;\n\nconst Item = styled.li`\n  width: 80px;\n  height: 50px;\n  text-align: center;\n  border-bottom: 3px solid\n    ${props => (props.current ? \"#3498db\" : \"transparent\")};\n  transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n  height: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n  <Header>\n    <List>\n      <Item current={pathname === \"/\"}>\n        <SLink to=\"/\">Movies</SLink>\n      </Item>\n      <Item current={pathname === \"/tv\"}>\n        <SLink to=\"/tv\">TV</SLink>\n      </Item>\n      <Item current={pathname === \"/search\"}>\n        <SLink to=\"/search\">Search</SLink>\n      </Item>\n    </List>\n  </Header>\n));\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  :not(:last-child) {\n    margin-bottom: 50px;\n  }\n`;\n\nconst Title = styled.span`\n  font-size: 14px;\n  font-weight: 600;\n`;\n\nconst Grid = styled.div`\n  margin-top: 25px;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 125px);\n  grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n  <Container>\n    <Title>{title}</Title>\n    <Grid>{children}</Grid>\n  </Container>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node\n  ])\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  height: 100vh;\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n  font-size: 28px;\n  margin-top: 20px;\n`;\n\nexport default () => (\n  <Container>\n    <span role=\"img\" aria-label=\"Loading\">\n      ⏰\n    </span>\n  </Container>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  color: ${props => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n  <Container>\n    <Text color={color}>{text}</Text>\n  </Container>\n);\n\nMessage.propTypes = {\n  text: PropTypes.string.isRequired,\n  color: PropTypes.string.isRequired\n};\n\nexport default Message;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div``;\n\nconst Image = styled.div`\n  background-image: url(${props => props.bgUrl});\n  height: 180px;\n  background-size: cover;\n  border-radius: 4px;\n  background-position: center center;\n  transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n  bottom: 5px;\n  right: 5px;\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageContainer = styled.div`\n  margin-bottom: 5px;\n  position: relative;\n  &:hover {\n    ${Image} {\n      opacity: 0.3;\n    }\n    ${Rating} {\n      opacity: 1;\n    }\n  }\n`;\n\nconst Title = styled.span`\n  display: block;\n  margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n  font-size: 10px;\n  color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\n    <Container>\n      <ImageContainer>\n        <Image\n          bgUrl={\n            imageUrl\n              ? `https://image.tmdb.org/t/p/w300/${imageUrl}`\n              : require(\"../assets/noPosterSmall.png\")\n          }\n        />\n        <Rating>\n          <span role=\"img\" aria-label=\"rating\">\n            ⭐️\n          </span>{\" \"}\n          {rating}/10\n        </Rating>\n      </ImageContainer>\n      <Title>\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\n      </Title>\n      <Year>{year}</Year>\n    </Container>\n  </Link>\n);\n\nPoster.propTypes = {\n  id: PropTypes.number.isRequired,\n  imageUrl: PropTypes.string,\n  title: PropTypes.string.isRequired,\n  rating: PropTypes.number,\n  year: PropTypes.string,\n  isMovie: PropTypes.bool\n};\n\nexport default Poster;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Section from \"Components/Section\";\nimport Loader from \"Components/Loader\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, upcoming, popular, loading, error }) => (\n  <>\n    <Helmet>\n      <title>Movies | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        <Helmet>\n          <title>Movies | Nomflix</title>\n        </Helmet>\n        {nowPlaying && nowPlaying.length > 0 && (\n          <Section title=\"Now Playing 🎬\">\n            {nowPlaying.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {upcoming && upcoming.length > 0 && (\n          <Section title=\"Upcoming Movies 🎬\">\n            {upcoming.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Movies 🎬\">\n            {popular.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nHomePresenter.prototype = {\n  nowPlaying: PropTypes.array,\n  popular: PropTypes.array,\n  upcoming: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default HomePresenter;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"dcbc827c7fd8ead347c3fee93d4ae49b\",\n    language: \"en-US\"\n  }\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  popular: () => api.get(\"movie/popular\"),\n  movieDetail: id =>\n    api.get(`movie/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n        api_key: \"dcbc827c7fd8ead347c3fee93d4ae49b\",\n        language: \"en-US\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/movie\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n\nexport const tvApi = {\n  topRated: () => api.get(\"tv/top_rated\"),\n  popular: () => api.get(\"tv/popular\"),\n  airingToday: () => api.get(\"tv/airing_today\"),\n  showDetail: id =>\n    api.get(`tv/${id}`, {\n      params: {\n        append_to_response: \"videos\",\n        api_key: \"dcbc827c7fd8ead347c3fee93d4ae49b\",\n        language: \"en-US\"\n      }\n    }),\n  search: term =>\n    api.get(\"search/tv\", {\n      params: {\n        query: encodeURIComponent(term)\n      }\n    })\n};\n","import HomeContainer from \"./HomeContainer\";\n\nexport default HomeContainer;\n","import React from \"react\";\nimport HomePresenter from \"./HomePresenter\";\nimport { moviesApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    nowPlaying: null,\n    upcoming: null,\n    popular: null,\n    error: null,\n    loading: true\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: nowPlaying }\n      } = await moviesApi.nowPlaying();\n      const {\n        data: { results: upcoming }\n      } = await moviesApi.upcoming();\n      const {\n        data: { results: popular }\n      } = await moviesApi.popular();\n      this.setState({\n        nowPlaying,\n        upcoming,\n        popular\n      });\n    } catch {\n      this.setState({\n        error: \"Can't find movie information.\"\n      });\n    } finally {\n      this.setState({\n        loading: false\n      });\n    }\n  }\n\n  render() {\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\n    return (\n      <HomePresenter\n        nowPlaying={nowPlaying}\n        upcoming={upcoming}\n        popular={popular}\n        error={error}\n        loading={loading}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n  <>\n    <Helmet>\n      <title>TV Shows | Nomflix</title>\n    </Helmet>\n    {loading ? (\n      <Loader />\n    ) : (\n      <Container>\n        {topRated && topRated.length > 0 && (\n          <Section title=\"Top Rated Shows 📺\">\n            {topRated.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {popular && popular.length > 0 && (\n          <Section title=\"Popular Shows 📺\">\n            {popular.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {airingToday && airingToday.length > 0 && (\n          <Section title=\"Airing Today 📺\">\n            {airingToday.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n      </Container>\n    )}\n  </>\n);\n\nTVPresenter.prototype = {\n  topRated: PropTypes.array,\n  popular: PropTypes.array,\n  airingToday: PropTypes.array,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default TVPresenter;\n","import TVContainer from \"./TVContainer\";\n\nexport default TVContainer;\n","import React from \"react\";\nimport TVPresenter from \"./TVPresenter\";\nimport { tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  state = {\n    topRated: null,\n    popular: null,\n    airingToday: null,\n    loading: true,\n    error: null\n  };\n\n  async componentDidMount() {\n    try {\n      const {\n        data: { results: topRated }\n      } = await tvApi.topRated();\n      const {\n        data: { results: popular }\n      } = await tvApi.popular();\n      const {\n        data: { results: airingToday }\n      } = await tvApi.airingToday();\n      this.setState({ topRated, popular, airingToday });\n    } catch {\n      this.setState({\n        error: \"Can't find TV information.\"\n      });\n    } finally {\n      this.setState({ loading: false });\n    }\n  }\n\n  render() {\n    const { topRated, popular, airingToday, loading, error } = this.state;\n    return (\n      <TVPresenter\n        topRated={topRated}\n        popular={popular}\n        airingToday={airingToday}\n        loading={loading}\n        error={error}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\nimport Section from \"Components/Section\";\nimport Message from \"Components/Message\";\nimport Poster from \"Components/Poster\";\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Form = styled.form`\n  margin-bottom: 50px;\n  width: 100%;\n`;\n\nconst Input = styled.input`\n  all: unset;\n  font-size: 28px;\n  width: 100%;\n`;\n\nconst SearchPresenter = ({\n  movieResults,\n  tvResults,\n  searchTerm,\n  loading,\n  error,\n  handleSubmit,\n  updateTerm\n}) => (\n  <Container>\n    <Helmet>\n      <title>Search | Nomflix</title>\n    </Helmet>\n    <Form onSubmit={handleSubmit}>\n      <Input\n        placeholder=\"Search Movies or TV shows!\"\n        value={searchTerm}\n        onChange={updateTerm}\n      />\n    </Form>\n    {loading ? (\n      <Loader />\n    ) : (\n      <>\n        {movieResults && movieResults.length > 0 && (\n          <Section title=\"Movie Results\">\n            {movieResults.map(movie => (\n              <Poster\n                key={movie.id}\n                id={movie.id}\n                title={movie.title}\n                imageUrl={movie.poster_path}\n                rating={movie.vote_average}\n                year={movie.release_date && movie.release_date.substring(0, 4)}\n                isMovie={true}\n              />\n            ))}\n          </Section>\n        )}\n        {tvResults && tvResults.length > 0 && (\n          <Section title=\"TV Show Results\">\n            {tvResults.map(show => (\n              <Poster\n                key={show.id}\n                id={show.id}\n                title={show.name}\n                imageUrl={show.poster_path}\n                rating={show.vote_average}\n                year={\n                  show.first_air_date && show.first_air_date.substring(0, 4)\n                }\n              />\n            ))}\n          </Section>\n        )}\n      </>\n    )}\n    {error && <Message color=\"#e74c3c\" text={error} />}\n    {tvResults &&\n      movieResults &&\n      tvResults.length === 0 &&\n      tvResults.length === 0 && (\n        <Message text=\"Nothing Found\" color=\"#95a5a6\" />\n      )}\n  </Container>\n);\n\nSearchPresenter.prototype = {\n  movieResults: PropTypes.array,\n  tvResults: PropTypes.array,\n  searchTerm: PropTypes.string,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string,\n  handleSubmit: PropTypes.func.isRequired,\n  updateTerm: PropTypes.func.isRequired\n};\n\nexport default SearchPresenter;\n","import SearchContainer from \"./SearchContainer\";\n\nexport default SearchContainer;\n","import React from \"react\";\nimport SearchPresenter from \"./SearchPresenter\";\nimport { moviesApi, tvApi } from \"api\";\n\nexport default class extends React.Component {\n  state = {\n    movieResults: null,\n    tvResults: null,\n    searchTerm: \"\",\n    loading: false,\n    error: null\n  };\n\n  // componentDidMount() {\n  //   this.handleSubmit();\n  // }\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { searchTerm } = this.state;\n    if (searchTerm !== \"\") {\n      this.searchByTerm();\n    }\n  };\n\n  updateTerm = event => {\n    const {\n      target: { value }\n    } = event;\n    this.setState({\n      searchTerm: value\n    });\n  };\n\n  searchByTerm = async () => {\n    const { searchTerm } = this.state;\n    try {\n      this.setState({ loading: true });\n      const {\n        data: { results: movieResults }\n      } = await moviesApi.search(searchTerm);\n      const {\n        data: { results: tvResults }\n      } = await tvApi.search(searchTerm);\n      this.setState({ movieResults, tvResults });\n    } catch {\n      this.setState({ error: \"Can't find results\" });\n    } finally {\n      this.setState({ loading: false });\n    }\n  };\n\n  render() {\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\n    return (\n      <SearchPresenter\n        movieResults={movieResults}\n        tvResults={tvResults}\n        searchTerm={searchTerm}\n        loading={loading}\n        error={error}\n        handleSubmit={this.handleSubmit}\n        updateTerm={this.updateTerm}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport Helmet from \"react-helmet\";\nimport Loader from \"Components/Loader\";\n\nconst Container = styled.div`\n  height: calc(100vh - 50px);\n  width: 100%;\n  position: relative;\n  padding: 50px;\n`;\n\nconst BackDrop = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  filter: blur(3px);\n  opacity: 0.5;\n  z-index: 0;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  width: 100%;\n  height: 100%;\n  position: relative;\n  z-index: 1;\n`;\n\nconst Cover = styled.div`\n  width: 30%;\n  height: 100%;\n  background-image: url(${props => props.bgImage});\n  background-position: center center;\n  background-size: cover;\n  border-radius: 5px;\n`;\n\nconst Data = styled.div`\n  width: 70%;\n  margin-left: 10px;\n`;\n\nconst Title = styled.h1`\n  font-size: 32px;\n  margin-bottom: 10px;\n`;\n\nconst ItemContainer = styled.div`\n  margin: 20px 0;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n  margin: 0 10px;\n`;\n\nconst Overview = styled.p`\n  font-size: 12px;\n  opacity: 0.7;\n  line-height: 1.5;\n  width: 50%;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n  loading ? (\n    <>\n      <Helmet>\n        <title>Loading | Nomflix</title>\n      </Helmet>\n      <Loader />\n    </>\n  ) : (\n    <Container>\n      <Helmet>\n        <title>{result.title ? result.title : result.name} | Nomflix</title>\n      </Helmet>\n      <BackDrop\n        bgImage={`https://image.tmdb.org/t/p/original/${result.backdrop_path}`}\n      />\n      <Content>\n        <Cover\n          bgImage={\n            result.poster_path\n              ? `https://image.tmdb.org/t/p/original/${result.poster_path}`\n              : require(\"../../assets/noPosterSmall.png\")\n          }\n        />\n        <Data>\n          <Title>{result.title ? result.title : result.name}</Title>\n          <ItemContainer>\n            <Item>\n              {result.release_date\n                ? result.release_date.substring(0, 4)\n                : result.first_air_date.substring(0, 4)}\n            </Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\n            </Item>\n            <Divider>∙</Divider>\n            <Item>\n              {result.genres &&\n                result.genres.map((genre, index) =>\n                  index === result.genres.length - 1\n                    ? genre.name\n                    : `${genre.name} / `\n                )}\n            </Item>\n          </ItemContainer>\n          <Overview>{result.overview}</Overview>\n        </Data>\n      </Content>\n    </Container>\n  );\n\nDetailPresenter.prototype = {\n  result: PropTypes.object,\n  loading: PropTypes.bool.isRequired,\n  error: PropTypes.string\n};\n\nexport default DetailPresenter;\n","import DetailContainer from \"./DetailContainer\";\n\nexport default DetailContainer;\n","import React from \"react\";\nimport DetailPresenter from \"./DetailPresenter\";\nimport { moviesApi, tvApi } from \"../../api\";\n\nexport default class extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      location: { pathname }\n    } = props;\n    this.state = {\n      result: null,\n      error: null,\n      loading: true,\n      isMovie: pathname.includes(\"/movie/\")\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      match: {\n        params: { id }\n      },\n      history: { push }\n    } = this.props;\n    const { isMovie } = this.state;\n    const parsedId = parseInt(id);\n    if (isNaN(parsedId)) {\n      return push(\"/\");\n    }\n    let result = null;\n    try {\n      if (isMovie) {\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\n      } else {\n        ({ data: result } = await tvApi.showDetail(parsedId));\n      }\n    } catch {\n      this.setState({ error: \"Can't find anything.\" });\n    } finally {\n      this.setState({ loading: false, result });\n    }\n  }\n\n  render() {\n    const { result, error, loading } = this.state;\n    console.log(result);\n    return <DetailPresenter result={result} error={error} loading={loading} />;\n  }\n}\n","import React from \"react\";\nimport Header from \"Components/Header\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\nimport Home from \"Routes/Home\";\nimport TV from \"Routes/TV\";\nimport Search from \"Routes/Search\";\nimport Detail from \"Routes/Detail\";\n\nexport default () => (\n  <Router>\n    <>\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/tv\" component={TV} />\n        <Route path=\"/search\" component={Search} />\n        <Route path=\"/movie/:id\" component={Detail} />\n        <Route path=\"/show/:id\" component={Detail} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </>\n  </Router>\n);\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing:border-box;\n    }\n    body{\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size:12px;\n        background-color:rgba(20, 20, 20, 1);\n        color:white;\n        padding-top:50px;\n    }\n`;\n\nexport default globalStyles;\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport GlobalStyles from \"Components/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}